{"version":3,"sources":["components/QuestionList.js","NavBar.js","pages/QuestionPage.js","components/AddQuestion.js","App.js","index.js"],"names":["QuestionList","props","useState","data","setData","useEffect","a","url","process","fetch","response","json","getData","className","map","questions","class","key","_id","to","name","NavBar","bg","variant","QuestionPage","id","match","params","Answer","AddQuestion","setName","addQuestion","console","log","newQuestion","method","headers","body","JSON","stringify","window","location","reload","style","width","height","type","value","onChange","event","target","onClick","App","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a600c9ab.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst API_URL = process.env.REACT_APP_API;\r\n\r\nfunction QuestionList(props) {\r\n    \r\n  \r\n    const [data, setData] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      async function getData() {\r\n        const url = `${API_URL}/questions`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setData(data);\r\n      }\r\n      getData();\r\n    }, []); \r\n\r\n\r\n    \r\n  \r\n    return (\r\n      <div className=\"background-blue\">\r\n        <h1>Question List</h1>\r\n        <ul>\r\n          {data.map(questions =>\r\n            <li class=\"list-group-item text-center\" key={questions._id}>\r\n              <Link to={`/questions/${questions._id}`}>{questions.name}</Link>\r\n            </li>)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default QuestionList;\r\n  ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst NavBar = () => (\r\n<nav bg=\"dark\" variant=\"dark\">\r\n    <ul>\r\n        <li>\r\n            <Link className=\"navitem\" to=\"/questions\">All questions</Link>\r\n            <Link className=\"navitem\" to=\"/question\">Ask Question</Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\n\r\n\r\n);\r\n    export default NavBar;","import React, {useEffect, useState} from 'react';\r\nconst API_URL = process.env.REACT_APP_API;\r\n\r\n\r\nconst QuestionPage = ({match}) => {\r\n  //find the id from the url\r\n    const id = match.params.id;\r\n    //now send it further\r\n    //const questions = data.find(questions =>questions._id ===id);\r\n\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n      async function getData() {\r\n        const url = `${API_URL}/questions/${id}`;\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setData(data);\r\n      }\r\n      getData();\r\n    }, [id]); \r\n  \r\nreturn(\r\n    <>\r\n    <h1 className=\"text-center questionHeader\">Question: {data.name}</h1>\r\n\r\n    <div>\r\n    <p>{data.Answer}</p>\r\n   \r\n      </div>\r\n    </>\r\n);\r\n}\r\nexport default QuestionPage;","import React, {useState, useEffect} from 'react';\r\n\r\nconst API_URL = process.env.REACT_APP_API;\r\n\r\nconst AddQuestion = ({}) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    async function addQuestion(name) {\r\n        console.log(name);\r\n    \r\n        const newQuestion = {\r\n          name: name,\r\n       \r\n        }   \r\n\r\n        const url =`${API_URL}/question` ;\r\n        const response = await fetch(url, {\r\n          method: 'POST', // or 'PUT'\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newQuestion),\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n        window.location.reload();\r\n\r\n      }\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n        <div className=\"Row\">          \r\n        <div className=\"Col\"> \r\n\r\n        <h1 className=\"text-center QuestionHeader\">Add Recipe</h1>\r\n        \r\n        </div>\r\n        </div>\r\n        <div className=\"row\">    \r\n        <div className=\"text-center txtbox\">\r\n            <p className=\"text-center\">ask your question here</p>    \r\n        <textarea style={{width:\"470px\", height:\"170px\"}} type=\"text\" value={name} onChange={(event) => setName(event.target.value)}/>\r\n        <button class=\"btn btn-primary\" onClick={() => addQuestion(name)}>Add Comment</button>\r\n        </div>\r\n        </div>\r\n\r\n  <label>\r\n      Name:\r\n\r\n  </label>\r\n\r\n  <label>\r\n                Name:\r\n                <input type=\"text\" value={name} onChange={(event) => setName(event.target.value)} />\r\n            <button onClick={() => addQuestion(name)}>Add Comment</button>\r\n            </label>\r\n            </div>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default AddQuestion;\r\n  ","import React, {useEffect, useState} from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport QuestionList from './components/QuestionList';\n//import QuestionList from \"./components/QuestionList\";\nimport NavBar from \"./NavBar\"\nimport QuestionPage from './pages/QuestionPage';\nimport AddQuestion from\"./components/AddQuestion\";\nimport \"./cssb/css/bootstrap.css\";\nimport \"./styles.css\";\n//import QuestionListPage from './pages/QuestionListPage';\nconst API_URL = process.env.REACT_APP_API;\nfunction App() {\n  const [data, setData] = useState([]);\n  \n  useEffect(() => {\n    async function getData() {\n      const url = `${API_URL}/questions`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n    }\n    getData();\n  }, []); \n\nasync function addQuestion(name){\n\nconst newQuestion = {\n  name: name\n}\nconst url = `${API_URL}/question`;\nconst response = await fetch(url, {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(newQuestion),\n});\nconst data = await response.json();\nconsole.log(data);\n\n}\n  return (\n    <>\n\n  <Router>\n    <NavBar/>\n    <Switch>\n      <Route path=\"/questions\" component={QuestionList} exact/>\n      <Route path=\"/questions/:id\" component={QuestionPage} exact/>\n      <Route path=\"/question\" component={AddQuestion} exact/>\n    </Switch>\n  </Router>\n      <h1>Question List</h1>\n      <p>Data from server:</p>\n      {data.map(questions => {\n        return <p key={questions._id}>{questions.name}({questions._id}) </p>;\n      })}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}